#!/bin/bash

set -e

print_help() {
  printf "Usage:\n"
}

confirm_continuation() {
    while true; do
      read -p "Are you sure you want to proceed? (yes/no) " yn

      case $yn in
	yes ) break;;
	no ) printf "exiting...\n";
		exit;;
	* ) printf "invalid response\n";;
      esac
    done
}

if [ $EUID != 0 ]; then
   echo "This script must be run as root"
   exit 1
fi

currently_deployed_ref=$(ostree admin status | grep -A2 "^*" | grep "origin refspec" | awk '{print $NF}')
devmode_ref=$(head -n1 /etc/ostree-dev-mode.conf)

if ! command -v ostree > /dev/null; then
  printf "ostree-dev-mode assumes ostree is installed\n"
  exit 2
fi

if ! command -v rpm-ostree > /dev/null; then
  printf "ostree-dev-mode assumes rpm-ostree is installed\n"
  exit 3
fi

if [ "$1" == "enable" ]; then
  if [ "$currently_deployed_ref" == "$devmode_ref" ]; then
     printf "Enabling ostree-dev-mode will leave the vehicle in an undrivable state removing proprietary data\n"
     confirm_continuation
     # delete all refs except for the dev-mode one and special ostree ones
     for i in $(ostree refs); do
        if [ "$i" != "^ostree" ] && [ "$i" != "$devmode_ref" ]; then
          ostree refs --delete $i
        fi
     done

     rpm-ostree cleanup -pr # cleanup everything except booted deployment
     ostree prune --refs-only # now finally prune the other refs
     /bin/bash # grant root access at this point
  else
     printf "Enabling ostree-dev-mode will leave the vehicle in an undrivable state removing proprietary data, this will also force a reboot\n"
     confirm_continuation
     ostree admin deploy $devmode_ref
     reboot
  fi
else
  print_help
fi

